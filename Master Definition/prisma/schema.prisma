// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int            @id @default(autoincrement())
  name            String
  email           String         @unique
  password        String
  gender          Gender
  image           String
  grNumber        String?
  phone           String
  address         String
  department      String?
  class           String?
  roleId          Int
  role            Role           @relation(fields: [roleId], references: [id])
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  RequestedLeaves LeaveRequest[] @relation("RequestedBy")
  ReceivedLeaves  LeaveRequest[] @relation("RequestedTo")
  UserLeave       UserLeave[]
}

model Role {
  id       Int    @id @default(autoincrement())
  name     String @unique
  priority Int
  User     User[]
}

model LeaveRequest {
  id        Int       @id @default(autoincrement())
  startDate DateTime
  endDate   DateTime
  leaveType LeaveType
  reason    String
  status    Status    @default(pending)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  userId      Int
  RequestedBy User @relation("RequestedBy", fields: [userId], references: [id])

  requestToId Int
  RequestedTo User @relation("RequestedTo", fields: [requestToId], references: [id])
}

model UserLeave {
  id                   Int      @id @default(autoincrement())
  userId               Int
  totalLeave           Int
  availableLeave       Int
  usedLeave            Int
  academicYear         String
  totalWorkingDays     Int
  attendancePercentage Decimal
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@unique([id, userId])
}

enum Gender {
  male
  female
}

enum LeaveType {
  firstHalf
  secondHalf
  fullDay
}

enum Status {
  pending
  approved
  rejected
}
